openapi: 3.0.4
info:
  title: Dear carmate
  version: 1.0.0
server:
  url: 'http://localhost:3001'
  description: '로컬 호스트에서 테스트할 때, 사용할 수 있는 기본 서버이다.'
  port:
    enum:
      - '3000'
      - '3001'
    default: '3000'
tags:
  - name: customer
    description: customer에 대한 API를 설명합니다.
  - name: car
    description: car에 대한 API를 설명합니다.
  - name: company
    description: company에 대한 API를 설명합니다.
  - name: user
    description: user에 대한 API를 설명합니다.
  - name: auth
    description: auth에 대한 API를 설명합니다.
  - name: image
    description: 이미지에 대한 API를 설명합니다.
  - name: dashboard
    description: 대시보드에 대한 API를 설명합니다.
paths:
  /customer:
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer 액세스 토큰
        schema:
          type: string
    get:
      summary: 고객 목록 조회
      description: 등록된 고객 목록을 페이지네이션 및 검색 조건으로 조회한다.
      tags:
        - customer
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: 현재 페이지 번호
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
          description: 페이지당 아이템 수
        - name: searchBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - name
              - email
          description: 검색 기준
        - name: keyword
          in: query
          required: false
          schema:
            type: string
          description: 검색어
      responses:
        '200':
          description: 고객 목록 조회 성공
          content:
            application/json:
              example:
                currentPage: 1
                totalPages: 5
                totalItemCount: 50
                data:
                  - id: 1
                    name: string
                    gender: male | female
                    phoneNumber: string
                    ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                    region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                    email: string
                    memo: string
                    contractCount: 0
                  - id: 2
                    name: string
                    gender: male | female
                    phoneNumber: string
                    ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                    region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                    email: string
                    memo: string
                    contractCount: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
    post:
      summary: 고객 등록
      description: 새로운 고객 정보를 등록한다.
      tags:
        - customer
      requestBody:
        description: 등록할 고객 정보
        content:
          application/json:
            example:
              name: string
              gender: male | female
              phoneNumber: string
              ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
              region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
              email: string
              memo: string
      responses:
        '201':
          description: 고객 등록 성공
          content:
            application/json:
              example:
                id: 123
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  '/customer/{customerId}':
    parameters:
      - in: path
        name: customerId
        schema:
          type: integer
        description: 고객의 id
      - name: Authorization
        in: header
        required: true
        description: Bearer 액세스 토큰
        schema:
          type: string
    get:
      summary: 고객 상세 조회
      description: 특정 고객의 상세 정보를 조회한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 상세 조회 성공
          content:
            application/json:
              example:
                id: 123
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
    patch:
      summary: 고객 정보 수정
      description: 특정 고객의 정보를 수정한다.
      tags:
        - customer
      requestBody:
        description: 수정할 고객 정보
        content:
          application/json:
            example:
              name: string
              gender: male | female
              phoneNumber: string
              ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
              region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
              email: string
              memo: string
      responses:
        '200':
          description: 고객 정보 수정 성공
          content:
            application/json:
              example:
                id: 123
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
    delete:
      summary: 고객 삭제
      description: 특정 고객을 삭제한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 삭제 성공
          content:
            application/json:
              example:
                message: 고객 삭제 성공
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
  /customer/upload:
    summary: 고객 일괄 업로드
    description: 파일을 업로드하여 고객 정보를 일괄 등록한다.
    tags:
      - customer
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer 액세스 토큰
        schema:
          type: string
    requestBody:
      description: 업로드할 고객 데이터 파일
      content:
        multipart/form-data:
          example:
            file: File
    responses:
      '200':
        description: 업로드 성공
        content:
          application/json:
            example:
              message: 성공적으로 등록되었습니다
      '400':
        description: 잘못된 요청
        content:
          application/json:
            example:
              message: 잘못된 요청입니다
      '401':
        description: 로그인 필요
        content:
          application/json:
            example:
              message: 로그인이 필요합니다
  /car:
    get:
      summary: 차량 목록 조회
      description: 모든 차량 목록을 조회합니다.
      tags:
        - car
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: status
          schema:
            type: string
          description: 차량의 계약 상태
        - in: query
          name: searchBy
          schema:
            type: string
            enum:
              - carNumber
              - model
          description: 검색 기준(carNumber 또는 model)
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 차량 목록 조회 성공
          content:
            application/json:
              examples:
                sample:
                  summary: 차량 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 5
                    totalItemCount: 50
                    data:
                      - id: 1
                        carNumber: string
                        manufacturer: string
                        model: string
                        type: string
                        manufacturingYear: 2020
                        mileage: 30
                        price: 1000000
                        accidentCount: 1
                        explanation: string
                        accidentDetails: string
                        status: possession | contractProceeding | contractCompleted
                      - id: 2
                        carNumber: string
                        manufacturer: string
                        model: string
                        type: string
                        manufacturingYear: 2020
                        mileage: 30
                        price: 1000000
                        accidentCount: 1
                        explanation: string
                        accidentDetails: string
                        status: possession | contractProceeding | contractCompleted
        '400':
          description: 차량 목록 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
    post:
      summary: 차량 등록
      description: 필요한 값들로 차량을 등록한다.
      tags:
        - car
      requestBody:
        description: 차량을 등록하기 위해 필요한 값들
        content:
          application/json:
            example:
              carNumber: string
              manufacturer: string
              model: string
              manufacturingYear: 2020
              mileage: 30
              price: 1000000
              accidentCount: 1
              explanation: string
              accidentDetails: string
      responses:
        '201':
          description: 고객 등록 성공
          content:
            application/json:
              example:
                id: 2
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  '/car/{carId}':
    parameters:
      - in: path
        name: carId
        schema:
          type: integer
        description: 차량 id
    get:
      summary: 특정 차량 조회
      description: 특정 차량의 상세 정보를 조회한다.
      tags:
        - car
      responses:
        '200':
          description: 차량 정보 조회 성공
          content:
            application/json:
              example:
                id: 1
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession | contractProceeding | contractCompleted
        '400':
          description: 고객 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
    delete:
      summary: 특정 차량 삭제
      description: 특정 차량을 삭제한다.
      tags:
        - car
      responses:
        '200':
          description: 차량 삭제 성공
          content:
            application/json:
              example:
                message: 차량 삭제 성공
        '400':
          description: 차량 삭제 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 차량 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 차량입니다
    patch:
      summary: 차량 수정
      description: 들어온 값들을 통해서 차량을 수정한다.
      tags:
        - car
      requestBody:
        description: 차량을 수정하기 위해 필요한 값들
        content:
          application/json:
            example:
              carNumber: string
              manufacturer: string
              model: string
              manufacturingYear: 2020
              mileage: 30
              price: 1000000
              accidentCount: 1
              explanation: string
              accidentDetails: string
      responses:
        '200':
          description: 차량 수정 성공
          content:
            application/json:
              example:
                id: 1
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession | contractProceeding | contractCompleted
        '400':
          description: 차량 수정 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 차량 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
  /car/upload:
    post:
      summary: 차량 대용량 업로드
      description: csv 파일을 이용해서 차량 정보를 모두 올린다.
      tags:
        - car
      requestBody:
        description: 차량을 등록하기 위해 필요한 파일
        content:
          text/csv: null
      responses:
        '200':
          description: 차량 대용량 등록 성공
          content:
            application/json:
              example:
                message: 성공적으로 등록되었습니다
        '400':
          description: 차량 등록 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /car/models:
    get:
      summary: 차량 모델 목록 조회
      description: 차량 모델 목록을 조회합니다.
      tags:
        - car
      responses:
        '200':
          description: 차량 목록 조회 성공
          content:
            application/json:
              example:
                data:
                  - manufacturer: 기아
                    model:
                      - K3
                      - K5
                      - K7
                      - K9
                      - K8
                  - manufacturer: 현대
                    model:
                      - 그랜저
                      - 아반떼
                      - 소나타
                      - 투싼
                      - 베뉴
        '400':
          description: 차량 목록 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /companies:
    get:
      summary: 회사 목록 조회
      description: 모든 회사 목록을 조회합니다.
      tags:
        - company
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
          description: 검색 기준
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 회사 목록 조회 성공
          content:
            application/json:
              examples:
                sample:
                  summary: 회사 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 2
                    totalItemCount: 6
                    data:
                      - id: 1
                        companyName: string
                        companyCode: string
                        userCount: 3
                        type: string
                      - id: 2
                        companyName: string
                        companyCode: string
                        userCount: 3
                        type: string
        '400':
          description: 회사 목록 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
    post:
      summary: 회사 등록
      description: 필요한 값들로 회사를 등록한다.
      tags:
        - company
      requestBody:
        description: 회사를 등록하기 위해 필요한 값들
        content:
          application/json:
            example:
              companyName: string
              companyCode: string
      responses:
        '201':
          description: 회사 등록 성공
          content:
            application/json:
              example:
                id: 1
                companyName: string
                companyCode: string
                userCount: 3
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
  '/companies/{companyId}':
    parameters:
      - in: path
        name: companyId
        schema:
          type: integer
        description: 회사 id
    patch:
      summary: 회사 수정
      description: 들어온 값들을 통해서 회사를 수정한다.
      tags:
        - company
      requestBody:
        description: 고객을 수정하기 위해 필요한 값들
        content:
          application/json:
            example:
              companyName: string
              companyCode: string
      responses:
        '200':
          description: 회사 수정 성공
          content:
            application/json:
              example:
                id: 1
                companyName: string
                companyCode: string
                userCount: 3
        '400':
          description: 회사 수정 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
        '404':
          description: 회사 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 회사입니다
    delete:
      summary: 특정 회사 삭제
      description: 특정 회사를 삭제한다.
      tags:
        - company
      responses:
        '200':
          description: 회사 정보 삭제 성공
          content:
            application/json:
              example:
                message: 회사 삭제 성공
        '400':
          description: 회사 삭제 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
        '404':
          description: 회사 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 회사입니다
  /companies/users:
    get:
      summary: 회사별 유저 목록 조회
      description: 모든 회사의 유저 목록을 조회합니다.
      tags:
        - company
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
          description: 검색 기준
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 회사 목록 조회 성공
          content:
            application/json:
              examples:
                sample:
                  summary: 회사 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 2
                    totalItemCount: 6
                    data:
                      - id: 1
                        name: string
                        email: string
                        employeeNumber: string
                        phoneNumber: string
                        company:
                          type: object
                          properties:
                            companyName:
                              type: string
                      - id: 2
                        name: string
                        email: string
                        employeeNumber: string
                        phoneNumber: string
                        company:
                          type: object
                          properties:
                            companyName:
                              type: string
        '400':
          description: 회사 목록 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
  /user:
    post:
      summary: 회원가입
      description: 필요한 값들로 회원가입한다.
      tags:
        - user
      requestBody:
        description: 회원가입하기 위해 필요한 값들
        content:
          application/json:
            example:
              name: string
              email: string
              employeeNumber: string
              phoneNumber: string
              password: string
              passwordConfirmation: string
              company: string
              companyCode: string
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              example:
                id: 1
                name: string
                email: string
                employeeNumber: string
                phoneNumber: string
                imageUrl: string
                isAdmin: true
                company:
                  companyCode: string
        '400':
          description: 비밀번호 확인 일치 하지 않음
          content:
            application/json:
              example:
                message: 비밀번호와 비밀번호 확인이 일치하지 않습니다
        '409':
          description: 이미 존재하는 이메일
          content:
            application/json:
              example:
                message: 이미 존재하는 이메일입니다
  /user/me:
    get:
      summary: 내 정보 조회
      description: 사용자의 상세 정보를 조회한다.
      tags:
        - user
      responses:
        '200':
          description: 차량 정보 조회 성공
          content:
            application/json:
              example:
                id: 1
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession | contractProceeding | contractCompleted
        '400':
          description: 고객 조회 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 고객입니다
    patch:
      summary: 유저 수정
      description: 들어온 값들을 통해서 유저를 수정한다.
      tags:
        - user
      requestBody:
        description: 유저를 수정하기 위해 필요한 값들
        content:
          application/json:
            example:
              name: string
              email: string
              employeeNumber: string
              phoneNumber: string
              password: string
              passwordConfirmation: string
              company: string
              companyCode: string
      responses:
        '200':
          description: 유저 수정 성공
          content:
            application/json:
              example:
                id: 1
                name: string
                email: string
                employeeNumber: string
                phoneNumber: string
                imageUrl: string
                isAdmin: true
                company:
                  companyCode: string
        '400':
          description: 유저 수정 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '404':
          description: 유저 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 유저입니다
    delete:
      summary: 회원 탈퇴
      description: 유저 스스로 회원 탈퇴한다.
      tags:
        - user
      responses:
        '200':
          description: 유저 삭제 성공
          content:
            application/json:
              example:
                message: 유저 삭제 성공
        '400':
          description: 유저 삭제 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  '/user/{userId}':
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        description: 유저 id
    delete:
      summary: 특정 유저 삭제
      description: 특정 유저를 삭제한다.
      tags:
        - user
      responses:
        '200':
          description: 유저 삭제 성공
          content:
            application/json:
              example:
                message: 유저 삭제 성공
        '400':
          description: 유저 삭제 실패
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              example:
                message: 관리자 권한이 필요합니다
        '404':
          description: 유저 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 유저입니다
  /auth/login:
    post:
      summary: 사용자 로그인
      description: 이메일과 비밀번호로 로그인을 시도한다.
      tags:
        - auth
      requestBody:
        description: 로그인 요청에 필요한 값들
        content:
          application/json:
            example:
              email: string
              password: string
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              example:
                user:
                  id: 1
                  name: string
                  email: string
                  employeeNumber: string
                  phoneNumber: string
                  imageUrl: string
                  isAdmin: true
                  company:
                    companyCode: string
                accessToken: string
                refreshToken: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '404':
          description: 사용자 없음 또는 비밀번호 불일치
          content:
            application/json:
              example:
                message: 존재하지 않거나 비밀번호가 일치하지 않습니다
  /auth/refresh:
    post:
      summary: 토큰 갱신
      description: Refresh Token으로 Access Token을 재발급한다.
      tags:
        - auth
      requestBody:
        description: 토큰 갱신 요청
        content:
          application/json:
            example:
              refreshToken: string
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              example:
                accessToken: string
                refreshToken: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
  /images/upload:
    post:
      summary: 이미지 업로드
      description: 이미지를 업로드하고 URL을 반환한다.
      tags:
        - images
      requestBody:
        description: 업로드할 이미지 파일
        content:
          multipart/form-data:
            example:
              image: File
      responses:
        '200':
          description: 업로드 성공
          content:
            application/json:
              example:
                imageUrl: string
  /dashboard:
    get:
      summary: 대시보드 데이터 조회
      description: '월간 매출, 계약 현황 등의 대시보드 데이터를 반환한다.'
      tags:
        - dashboard
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      requestBody:
        description: 없음
      responses:
        '200':
          description: 대시보드 데이터 조회 성공
          content:
            application/json:
              example:
                monthlySales: 123
                lastMonthSales: 123
                growthRate: 123
                proceedingContractsCount: 123
                completedContractsCount: 123
                contractsByCarType:
                  - carType: 경·소형
                    count: 123
                  - carType: 준중·중형
                    count: 123
                  - carType: 대형
                    count: 123
                  - carType: 스포츠카
                    count: 123
                  - carType: SUV
                    count: 123
                salesByCarType:
                  - carType: 경·소형
                    count: 123
                  - carType: 준중·중형
                    count: 123
                  - carType: 대형
                    count: 123
                  - carType: 스포츠카
                    count: 123
                  - carType: SUV
                    count: 123
        '401':
          description: 인증 실패
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contracts:
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer 액세스 토큰
        schema:
          type: string
    get:
      summary: 계약 목록 조회
      description: 계약 목록을 상태별로 조회한다.
      tags:
        - contracts
      parameters:
        - name: searchBy
          in: query
          required: false
          description: 검색 기준 (customerName | userName)
          schema:
            type: string
        - name: keyword
          in: query
          required: false
          description: 검색어
          schema:
            type: string
      responses:
        '200':
          description: 계약 목록 조회 성공
          content:
            application/json:
              example:
                carInspection:
                  totalItemCount: 50
                  data:
                    - id: 1
                      car:
                        id: 1
                        model: K5
                      customer:
                        id: 1
                        name: 최효정
                      user:
                        id: 1
                        name: 김연우
                      meetings:
                        - date: '2024-02-22'
                          alarms:
                            - '2024-02-22T09:00:00.000Z'
                            - '2024-02-21T09:00:00.000Z'
                      contractPrice: 2000000
                      resolutionDate: '2024-02-22T07:47:49.803Z'
                      status: string
                priceNegotiation:
                  totalItemCount: 20
                  data:
                    - ...
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 실패
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
    post:
      summary: 계약 생성
      description: 새로운 계약을 생성한다.
      tags:
        - contracts
      requestBody:
        description: 계약 생성에 필요한 값들
        content:
          application/json:
            example:
              carId: 1
              customerId: 2
              meetings:
                - date: '2024-02-22'
                  alarms:
                    - '2024-02-22T09:00:00'
                    - '2024-02-21T09:00:00'
      responses:
        '201':
          description: 계약 생성 성공
          content:
            application/json:
              example:
                id: 1
                status: carInspection
                resolutionDate: '2024-02-22T09:00:00'
                contractPrice: 20000000
                meetings:
                  - date: '2024-02-22'
                    alarms:
                      - '2024-02-22T09:00:00'
                      - '2024-02-21T09:00:00'
                    user:
                      id: 1
                      name: string
                    customer:
                      id: 5
                      name: string
                    car:
                      id: 6
                      model: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 실패
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  '/contracts/{contractId}':
    parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer 액세스 토큰
        schema:
          type: string
      - name: contractId
        in: path
        required: true
        description: 계약 ID
        schema:
          type: integer
    delete:
      summary: 계약 삭제
      description: 계약을 삭제한다.
      tags:
        - contracts
      responses:
        '200':
          description: 계약 삭제 성공
          content:
            application/json:
              example:
                message: 계약 삭제 성공
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 실패
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '403':
          description: 권한 없음
          content:
            application/json:
              example:
                message: 담당자만 삭제가 가능합니다
        '404':
          description: 계약 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 계약입니다
    patch:
      summary: 계약 수정
      description: 계약 정보를 수정한다.
      tags:
        - contracts
      requestBody:
        description: 수정할 계약 정보
        content:
          application/json:
            example:
              status: carInspection
              resolutionDate: '2024-02-22T09:00:00'
              contractPrice: 20000000
              meetings:
                - date: '2024-02-22'
                  alarms:
                    - '2024-02-22T09:00:00'
                    - '2024-02-21T09:00:00'
              contractDocuments:
                - id: 1
                  fileName: Contract File 1
                - id: 2
                  fileName: Contract File 2
              userId: 2
              customerId: 3
              carId: 4
      responses:
        '200':
          description: 계약 수정 성공
          content:
            application/json:
              example:
                id: 1
                status: carInspection
                resolutionDate: '2024-02-22T09:00:00'
                contractPrice: 20000000
                meetings:
                  - date: '2024-02-22'
                    alarms:
                      - '2024-02-22T09:00:00'
                      - '2024-02-21T09:00:00'
                    user:
                      id: 1
                      name: string
                    customer:
                      id: 5
                      name: string
                    car:
                      id: 6
                      model: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 실패
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
        '403':
          description: 권한 없음
          content:
            application/json:
              example:
                message: 담당자만 수정이 가능합니다
        '404':
          description: 계약 없음
          content:
            application/json:
              example:
                message: 존재하지 않는 계약입니다
  /contracts/cars:
    get:
      summary: 계약 차량 목록 조회
      description: 계약 등록을 위해 선택 가능한 차량 목록을 조회한다.
      tags:
        - contracts
      responses:
        '200':
          description: 차량 목록 조회 성공
          content:
            application/json:
              example:
                - id: 1
                  data: 레이(01더 0101)
                - id: 2
                  data: 레이(01가 1818)
                - id: 3
                  data: 레이(22구 1234)
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contracts/customers:
    get:
      summary: 계약 고객 목록 조회
      description: 계약 등록을 위해 선택 가능한 고객 목록을 조회한다.
      tags:
        - contracts
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      responses:
        '200':
          description: 고객 목록 조회 성공
          content:
            application/json:
              example:
                - id: 1
                  data: 최효정(hjhj@codeit.com)
                - id: 2
                  data: 김이박(kip@codeit.com)
                - id: 3
                  data: 최홍만(hm@codeit.com)
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contracts/users:
    get:
      summary: 계약 담당자 목록 조회
      description: 계약 등록을 위해 선택 가능한 담당자 목록을 조회한다.
      tags:
        - contracts
      responses:
        '200':
          description: 담당자 목록 조회 성공
          content:
            application/json:
              example:
                - id: 1
                  data: 최효정(hjhj@codeit.com)
                - id: 2
                  data: 김이박(kip@codeit.com)
                - id: 3
                  data: 최홍만(hm@codeit.com)
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contractDocuments:
    get:
      summary: 계약서 목록 조회
      description: 계약서 정보를 페이지네이션 및 검색 조건으로 조회한다.
      tags:
        - contractDocuments
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: 현재 페이지 번호
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
          description: 페이지 당 아이템 수
        - name: searchBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - contractName
          description: 검색 기준
        - name: keyword
          in: query
          required: false
          schema:
            type: string
          description: 검색어
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      responses:
        '200':
          description: 계약서 목록 조회 성공
          content:
            application/json:
              example:
                currentPage: 1
                totalPages: 2
                totalItemCount: 6
                data:
                  - id: 1
                    contractName: string
                    resolutionDate: '2024-02-22T09:00:00.000Z'
                    documentsCount: 2
                    manager: string
                    carNumber: string
                    documents:
                      - id: 1
                        fileName: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contractDocuments/draft:
    get:
      summary: 계약서 초안 목록 조회
      description: 계약서 작성이 필요한 계약 목록을 조회한다.
      tags:
        - contractDocuments
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      responses:
        '200':
          description: 계약서 초안 목록 조회 성공
          content:
            application/json:
              example:
                - id: 1
                  data: 그랜저 - 김고객 고객님
                - id: 2
                  data: K3 - 홍길동 고객님
        '400':
          description: 잘못된 요청
          content:
            application/json:
              example:
                message: 잘못된 요청입니다
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  /contractDocuments/upload:
    post:
      summary: 계약서 파일 업로드
      description: 계약서 파일을 업로드한다.
      tags:
        - contractDocuments
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      requestBody:
        description: 업로드할 계약서 파일
        content:
          multipart/form-data:
            example:
              contractDocument: File
      responses:
        '200':
          description: 계약서 업로드 성공
          content:
            application/json:
              example:
                contractDocumentId: 1
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
  '/contractDocuments/{contractDocumentId}/download':
    get:
      summary: 계약서 다운로드
      description: 계약서 파일을 다운로드한다.
      tags:
        - contractDocuments
      parameters:
        - name: contractDocumentId
          in: path
          required: true
          schema:
            type: integer
          description: 계약서 ID
        - name: Authorization
          in: header
          required: true
          description: Bearer 액세스 토큰
          schema:
            type: string
      responses:
        '200':
          description: 계약서 다운로드 성공
          content:
            application/json:
              example:
                message: 계약서 다운로드 성공
        '401':
          description: 인증 필요
          content:
            application/json:
              example:
                message: 로그인이 필요합니다
