openapi: 3.0.4
info:
  title: Dear carmate
  version: 1.0.0
server:
  url: 'http://localhost:3001'
  description: '로컬 호스트에서 테스트할 때, 사용할 수 있는 기본 서버이다.'
  port:
    enum:
      - '3000'
      - '3001'
    default: '3000'
tags:
  - name: customer
    description: customer에 대한 API를 설명합니다.
paths:
  /customer:
    get:
      summary: 고객 목록 조회
      description: 모든 고객의 목록을 조회합니다.
      tags:
        - customer
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
            enum:
              - name
              - email
          description: 검색 기준(name 또는 email)
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 고객 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    description: 현재 페이지 번호
                  totalPages:
                    type: integer
                    description: 전체 페이지 수
                  totalItemCount:
                    type: integer
                    description: 전체 아이템 수
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1customer~1%7BcustomerId%7D/get/responses/200/content/application~1json/schema'
                required:
                  - currentPage
                  - totalPages
                  - totalItemCount
                  - data
                additionalProperties: false
              examples:
                sample:
                  summary: 고객 목록 예시
                  value:
                    currentPage: 1
                    totalPages: 5
                    totalItemCount: 50
                    data:
                      - id: 1
                        name: string
                        gender: male
                        phoneNumber: 010-0000-0000
                        ageGroup: 10대
                        region: 서울
                        email: tmp@tmp.com
                        memo: string
                        contractCount: 0
                      - id: 2
                        name: string
                        gender: female
                        phoneNumber: 010-0000-0000
                        ageGroup: 10대
                        region: 서울
                        email: tmp@tmp.com
                        memo: string
                        contractCount: 0
        '400':
          description: 고객 목록 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: bad request
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Unauthorized
              example:
                message: 로그인이 필요합니다
    post:
      summary: 고객 등록
      description: 필요한 값들로 고객을 등록한다.
      tags:
        - customer
      requestBody:
        description: 고객을 등록하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 고객 이름
                  maxLength: 50
                  nullable: false
                gender:
                  type: string
                  description: 고객 성별
                  nullable: false
                  enum:
                    - male
                    - female
                phoneNumber:
                  type: string
                  description: 고객 전화번호
                  maxLength: 13
                  nullable: false
                ageGroup:
                  type: string
                  description: 고객 나이대
                  nullable: true
                  enum:
                    - 10대
                    - 20대
                    - 30대
                    - 40대
                    - 50대
                    - 60대
                    - 70대
                    - 80대
                region:
                  type: string
                  description: 고객 지역
                  nullable: true
                  enum:
                    - 서울
                    - 경기
                    - 인천
                    - 강원
                    - 충북
                    - 충남
                    - 세종
                    - 대전
                    - 전북
                    - 전남
                    - 광주
                    - 경북
                    - 경남
                    - 대구
                    - 울산
                    - 부산
                    - 제주
                email:
                  type: string
                  format: email
                  nullable: true
                  description: 고객 이메일
                memo:
                  type: string
                  nullable: true
                  description: 고객에 대한 간단한 메모
              required:
                - name
                - gender
                - phoneNumber
                - ageGroup
                - region
                - email
                - memo
              additionalProperties: false
            example:
              name: 김기로
              gender: male
              phoneNumber: 010-2345-1234
              ageGroup: 20대
              region: 광주
              email: user@example.com
              memo: tmp memo
      responses:
        '201':
          description: 고객 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: 고객 구별용 id
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    type: integer
                    format: int64
                    description: 고객의 계약 개수
                required:
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                additionalProperties: false
              example:
                id: 2
                name: 김기로
                gender: male
                phoneNumber: 010-2345-1234
                ageGroup: 20대
                region: 광주
                email: user@example.com
                memo: tmp memo
                contractCount: 0
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  '/customer/{customerId}':
    parameters:
      - in: path
        name: customerId
        schema:
          type: integer
        description: 고객의 id
    get:
      summary: 특정 고객 조회
      description: 특정 고객의 상세 정보를 조회한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/id'
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/contractCount'
                required:
                  - id
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                  - contractCount
                additionalProperties: false
              example:
                id: 1
                name: 박수로
                gender: male
                phoneNumber: 010-2345-1234
                ageGroup: 10대
                region: 서울
                email: user@example.com
                memo: tmp memo
                contractCount: 0
        '400':
          description: 고객 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Not Found
              example:
                message: 존재하지 않는 고객입니다
    patch:
      summary: 고객 수정
      description: 들어온 값들을 통해서 고객을 수정한다.
      tags:
        - customer
      requestBody:
        description: 고객을 수정하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                gender:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                phoneNumber:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                ageGroup:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                region:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                email:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                memo:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
              additionalProperties: false
            example:
              name: 김기로
              gender: male
              phoneNumber: 010-2345-1234
              ageGroup: 20대
              region: 광주
              email: user@example.com
              memo: tmp memo
      responses:
        '200':
          description: 고객 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/id'
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/contractCount'
                required:
                  - id
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                  - contractCount
                additionalProperties: false
              example:
                id: 2
                name: 김기로
                gender: male
                phoneNumber: 010-2345-1234
                ageGroup: 20대
                region: 광주
                email: user@example.com
                memo: tmp memo
                contractCount: 0
        '400':
          description: 고객 수정 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1%7BcustomerId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 고객입니다
    delete:
      summary: 특정 고객 삭제
      description: 특정 고객을 삭제한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 정보 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 고객 삭제 성공
              example:
                message: 고객 삭제 성공
        '400':
          description: 고객 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/400/content/application~1json/schema'
              message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/401/content/application~1json/schema'
              message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1%7BcustomerId%7D/get/responses/404/content/application~1json/schema'
              message: 존재하지 않는 고객입니다
  /customer/upload:
    post:
      summary: 고객 대용량 업로드
      description: csv 파일을 이용해서 고객의 정보를 모두 올린다.
      tags:
        - customer
      requestBody:
        description: 고객을 등록하기 위해 필요한 파일
        content:
          text/csv:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: 고객 대용량 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK
              example:
                message: 성공적으로 등록되었습니다
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
