openapi: 3.0.4
info:
  title: Dear carmate
  version: 1.0.0
server:
  url: 'http://localhost:3001'
  description: '로컬 호스트에서 테스트할 때, 사용할 수 있는 기본 서버이다.'
  port:
    enum:
      - '3000'
      - '3001'
    default: '3000'
tags:
  - name: customer
    description: customer에 대한 API를 설명합니다.
  - name: car
    description: car에 대한 API를 설명합니다.
  - name: company
    description: company에 대한 API를 설명합니다.
paths:
  /customer:
    get:
      summary: 고객 목록 조회
      description: 모든 고객의 목록을 조회합니다.
      tags:
        - customer
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
            enum:
              - name
              - email
          description: 검색 기준(name 또는 email)
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 고객 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    description: 현재 페이지 번호
                  totalPages:
                    type: integer
                    description: 전체 페이지 수
                  totalItemCount:
                    type: integer
                    description: 전체 아이템 수
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1customer~1%7BcustomerId%7D/get/responses/200/content/application~1json/schema'
                required:
                  - currentPage
                  - totalPages
                  - totalItemCount
                  - data
                additionalProperties: false
              examples:
                sample:
                  summary: 고객 목록 예시
                  value:
                    currentPage: 1
                    totalPages: 5
                    totalItemCount: 50
                    data:
                      - id: 1
                        name: string
                        gender: male | female
                        phoneNumber: string
                        ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                        region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                        email: string
                        memo: string
                        contractCount: 0
                      - id: 2
                        name: string
                        gender: male | female
                        phoneNumber: string
                        ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                        region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                        email: string
                        memo: string
                        contractCount: 0
        '400':
          description: 고객 목록 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
    post:
      summary: 고객 등록
      description: 필요한 값들로 고객을 등록한다.
      tags:
        - customer
      requestBody:
        description: 고객을 등록하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 고객 이름
                  maxLength: 50
                gender:
                  type: string
                  description: 고객 성별
                  enum:
                    - male
                    - female
                phoneNumber:
                  type: string
                  description: 고객 전화번호
                  maxLength: 13
                ageGroup:
                  type: string
                  description: 고객 나이대
                  enum:
                    - 10대
                    - 20대
                    - 30대
                    - 40대
                    - 50대
                    - 60대
                    - 70대
                    - 80대
                region:
                  type: string
                  description: 고객 지역
                  enum:
                    - 서울
                    - 경기
                    - 인천
                    - 강원
                    - 충북
                    - 충남
                    - 세종
                    - 대전
                    - 전북
                    - 전남
                    - 광주
                    - 경북
                    - 경남
                    - 대구
                    - 울산
                    - 부산
                    - 제주
                email:
                  type: string
                  format: email
                  description: 고객 이메일
                memo:
                  type: string
                  description: 고객에 대한 간단한 메모
              required:
                - name
                - gender
                - phoneNumber
                - ageGroup
                - region
                - email
                - memo
              additionalProperties: false
            example:
              name: string
              gender: male | female
              phoneNumber: string
              ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
              region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
              email: string
              memo: string
      responses:
        '201':
          description: 고객 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: 고객 구별용 id
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    type: integer
                    format: int64
                    description: 고객의 계약 개수
                required:
                  - id
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                  - contractCount
                additionalProperties: false
              example:
                id: 1
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  '/customer/{customerId}':
    parameters:
      - in: path
        name: customerId
        schema:
          type: integer
        description: 고객의 id
    get:
      summary: 특정 고객 조회
      description: 특정 고객의 상세 정보를 조회한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/id'
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/contractCount'
                required:
                  - id
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                  - contractCount
                additionalProperties: false
              example:
                id: 1
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 고객 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 고객입니다
    patch:
      summary: 고객 수정
      description: 들어온 값들을 통해서 고객을 수정한다.
      tags:
        - customer
      requestBody:
        description: 고객을 수정하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                gender:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                phoneNumber:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                ageGroup:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                region:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                email:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                memo:
                  $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
              additionalProperties: false
            example:
              name: string
              gender: male | female
              phoneNumber: string
              ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
              region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
              email: string
              memo: string
      responses:
        '200':
          description: 고객 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/id'
                  name:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/name'
                  gender:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/gender'
                  phoneNumber:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/phoneNumber'
                  ageGroup:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/ageGroup'
                  region:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/region'
                  email:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/email'
                  memo:
                    $ref: '#/paths/~1customer/post/requestBody/content/application~1json/schema/properties/memo'
                  contractCount:
                    $ref: '#/paths/~1customer/post/responses/201/content/application~1json/schema/properties/contractCount'
                required:
                  - id
                  - name
                  - gender
                  - phoneNumber
                  - ageGroup
                  - region
                  - email
                  - memo
                  - contractCount
                additionalProperties: false
              example:
                id: 1
                name: string
                gender: male | female
                phoneNumber: string
                ageGroup: 10대 | 20대 | 30대 | 40대 | 50대 | 60대 | 70대 | 80대
                region: 서울 | 경기 | 인천 | 강원 | 충북 | 충남 | 세종 | 대전 | 전북 | 전남 | 광주 | 경북 | 경남 | 대구 | 울산 | 부산 | 제주
                email: string
                memo: string
                contractCount: 0
        '400':
          description: 고객 수정 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 고객입니다
    delete:
      summary: 특정 고객 삭제
      description: 특정 고객을 삭제한다.
      tags:
        - customer
      responses:
        '200':
          description: 고객 정보 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 고객 삭제 성공
              example:
                message: 고객 삭제 성공
        '400':
          description: 고객 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 고객입니다
  /customer/upload:
    post:
      summary: 고객 대용량 업로드
      description: csv 파일을 이용해서 고객의 정보를 모두 올린다.
      tags:
        - customer
      requestBody:
        description: 고객을 등록하기 위해 필요한 파일
        content:
          text/csv:
            schema:
              $ref: '#/paths/~1car~1upload/post/requestBody/content/text~1csv/schema'
      responses:
        '200':
          description: 고객 대용량 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1upload/post/responses/200/content/application~1json/schema'
              example:
                message: 성공적으로 등록되었습니다
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  /car:
    get:
      summary: 차량 목록 조회
      description: 모든 차량 목록을 조회합니다.
      tags:
        - car
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: status
          schema:
            type: string
          description: 차량의 계약 상태
        - in: query
          name: searchBy
          schema:
            type: string
            enum:
              - carNumber
              - model
          description: 검색 기준(carNumber 또는 model)
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 차량 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    description: 현재 페이지 번호
                  totalPages:
                    type: integer
                    description: 전체 페이지 수
                  totalItemCount:
                    type: integer
                    description: 전체 아이템 수
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/200/content/application~1json/schema'
                required:
                  - currentPage
                  - totalPages
                  - totalItemCount
                  - data
                additionalProperties: false
              examples:
                sample:
                  summary: 차량 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 5
                    totalItemCount: 50
                    data:
                      - id: 1
                        carNumber: string
                        manufacturer: string
                        model: string
                        type: string
                        manufacturingYear: 2020
                        mileage: 30
                        price: 1000000
                        accidentCount: 1
                        explanation: string
                        accidentDetails: string
                        status: possession | contractProceeding | contractCompleted
                      - id: 2
                        carNumber: string
                        manufacturer: string
                        model: string
                        type: string
                        manufacturingYear: 2020
                        mileage: 30
                        price: 1000000
                        accidentCount: 1
                        explanation: string
                        accidentDetails: string
                        status: possession | contractProceeding | contractCompleted
        '400':
          description: 차량 목록 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: bad request
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Unauthorized
              example:
                message: 로그인이 필요합니다
    post:
      summary: 차량 등록
      description: 필요한 값들로 차량을 등록한다.
      tags:
        - car
      requestBody:
        description: 차량을 등록하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                carNumber:
                  type: string
                  description: 차 번호
                manufacturer:
                  type: string
                  description: 차 제작 회사
                model:
                  type: string
                  description: 차 모델
                manufacturingYear:
                  type: string
                  description: 차 만든 연도
                mileage:
                  type: integer
                  format: int64
                  description: 이동한 거리
                price:
                  type: integer
                  format: int64
                  description: 가격
                accidentCount:
                  type: integer
                  format: int32
                  description: 사고 횟수
                explanation:
                  type: string
                  description: 설명
                accidentDetails:
                  type: string
                  description: 사고 세부 사항
              required:
                - carNumber
                - manufacturer
                - model
                - manufacturingYear
                - mileage
                - price
                - accidentCount
                - explanation
              additionalProperties: false
            example:
              carNumber: string
              manufacturer: string
              model: string
              manufacturingYear: 2020
              mileage: 30
              price: 1000000
              accidentCount: 1
              explanation: string
              accidentDetails: string
      responses:
        '201':
          description: 고객 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: 차 구별용 id
                  carNumber:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/carNumber'
                  manufacturer:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturer'
                  model:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/model'
                  type:
                    type: string
                    description: 차 종류
                  manufacturingYear:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturingYear'
                  mileage:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/mileage'
                  price:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/price'
                  accidentCount:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentCount'
                  explanation:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/explanation'
                  accidentDetails:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentDetails'
                  status:
                    type: string
                    description: 사고 세부 사항
                    enum:
                      - possession
                      - contractProceeding
                      - contractCompleted
                required:
                  - id
                  - carNumber
                  - manufacturer
                  - model
                  - type
                  - manufacturingYear
                  - mileage
                  - price
                  - accidentCount
                  - explanation
                  - accidentDetails
                  - status
                additionalProperties: false
              example:
                id: 2
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  '/car/{carId}':
    parameters:
      - in: path
        name: carId
        schema:
          type: integer
        description: 차량 id
    get:
      summary: 특정 차량 조회
      description: 특정 차량의 상세 정보를 조회한다.
      tags:
        - car
      responses:
        '200':
          description: 차량 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/id'
                  carNumber:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/carNumber'
                  manufacturer:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturer'
                  model:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/model'
                  type:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/type'
                  manufacturingYear:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturingYear'
                  mileage:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/mileage'
                  price:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/price'
                  accidentCount:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentCount'
                  explanation:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/explanation'
                  accidentDetails:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentDetails'
                  status:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/status'
                required:
                  - id
                  - carNumber
                  - manufacturer
                  - model
                  - type
                  - manufacturingYear
                  - mileage
                  - price
                  - accidentCount
                  - explanation
                  - accidentDetails
                  - status
                additionalProperties: false
              example:
                id: 1
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession | contractProceeding | contractCompleted
        '400':
          description: 고객 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 고객 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Not Found
              example:
                message: 존재하지 않는 고객입니다
    delete:
      summary: 특정 차량 삭제
      description: 특정 차량을 삭제한다.
      tags:
        - car
      responses:
        '200':
          description: 차량 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 고객 삭제 성공
              example:
                message: 차량 삭제 성공
        '400':
          description: 차량 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 차량 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 차량입니다
    patch:
      summary: 차량 수정
      description: 들어온 값들을 통해서 차량을 수정한다.
      tags:
        - car
      requestBody:
        description: 차량을 수정하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                carNumber:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/carNumber'
                manufacturer:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturer'
                model:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/model'
                manufacturingYear:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturingYear'
                mileage:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/mileage'
                price:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/price'
                accidentCount:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentCount'
                explanation:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/explanation'
                accidentDetails:
                  $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentDetails'
              additionalProperties: false
            example:
              carNumber: string
              manufacturer: string
              model: string
              manufacturingYear: 2020
              mileage: 30
              price: 1000000
              accidentCount: 1
              explanation: string
              accidentDetails: string
      responses:
        '200':
          description: 차량 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/id'
                  carNumber:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/carNumber'
                  manufacturer:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturer'
                  model:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/model'
                  type:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/type'
                  manufacturingYear:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/manufacturingYear'
                  mileage:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/mileage'
                  price:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/price'
                  accidentCount:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentCount'
                  explanation:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/explanation'
                  accidentDetails:
                    $ref: '#/paths/~1car/post/requestBody/content/application~1json/schema/properties/accidentDetails'
                  status:
                    $ref: '#/paths/~1car/post/responses/201/content/application~1json/schema/properties/status'
                required:
                  - id
                  - carNumber
                  - manufacturer
                  - model
                  - type
                  - manufacturingYear
                  - mileage
                  - price
                  - accidentCount
                  - explanation
                  - accidentDetails
                  - status
                additionalProperties: false
              example:
                id: 1
                carNumber: string
                manufacturer: string
                model: string
                type: string
                manufacturingYear: 2020
                mileage: 30
                price: 1000000
                accidentCount: 1
                explanation: string
                accidentDetails: string
                status: possession | contractProceeding | contractCompleted
        '400':
          description: 차량 수정 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
        '404':
          description: 차량 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 고객입니다
  /car/upload:
    post:
      summary: 차량 대용량 업로드
      description: csv 파일을 이용해서 차량 정보를 모두 올린다.
      tags:
        - car
      requestBody:
        description: 차량을 등록하기 위해 필요한 파일
        content:
          text/csv:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: 차량 대용량 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: OK
              example:
                message: 성공적으로 등록되었습니다
        '400':
          description: 차량 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  /car/models:
    get:
      summary: 차량 모델 목록 조회
      description: 차량 모델 목록을 조회합니다.
      tags:
        - car
      responses:
        '200':
          description: 차량 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        manufacturer:
                          type: string
                          description: 차량 제조사
                        model:
                          type: array
                          items:
                            type: string
                          description: 차량 모델
                required:
                  - data
                additionalProperties: false
              example:
                data:
                  - manufacturer: 기아
                    model:
                      - K3
                      - K5
                      - K7
                      - K9
                      - K8
                  - manufacturer: 현대
                    model:
                      - 그랜저
                      - 아반떼
                      - 소나타
                      - 투싼
                      - 베뉴
        '400':
          description: 차량 목록 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 로그인 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 로그인이 필요합니다
  /companies:
    get:
      summary: 회사 목록 조회
      description: 모든 회사 목록을 조회합니다.
      tags:
        - company
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
          description: 검색 기준
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 회사 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    description: 현재 페이지 번호
                  totalPages:
                    type: integer
                    description: 전체 페이지 수
                  totalItemCount:
                    type: integer
                    description: 전체 아이템 수
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1companies/post/responses/201/content/application~1json/schema'
                required:
                  - currentPage
                  - totalPages
                  - totalItemCount
                  - data
                additionalProperties: false
              examples:
                sample:
                  summary: 회사 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 2
                    totalItemCount: 6
                    data:
                      - id: 1
                        companyName: string
                        companyCode: string
                        userCount: 3
                        type: string
                      - id: 2
                        companyName: string
                        companyCode: string
                        userCount: 3
                        type: string
        '400':
          description: 회사 목록 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 관리자 권한이 필요합니다
    post:
      summary: 회사 등록
      description: 필요한 값들로 회사를 등록한다.
      tags:
        - company
      requestBody:
        description: 회사를 등록하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                  description: 회사 이름
                companyCode:
                  type: string
                  description: 회사 코드
              required:
                - companyName
                - companyCode
              additionalProperties: false
            example:
              companyName: string
              companyCode: string
      responses:
        '201':
          description: 회사 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: 회사 구별용 id
                  companyName:
                    $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyName'
                  companyCode:
                    $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyCode'
                  userCount:
                    type: integer
                    description: 회사에 속한 유저 수
                required:
                  - id
                  - companyName
                  - companyCode
                  - userCount
                additionalProperties: false
              example:
                id: 1
                companyName: string
                companyCode: string
                userCount: 3
        '400':
          description: 고객 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 관리자 권한이 필요합니다
  '/companies/{companyId}':
    parameters:
      - in: path
        name: companyId
        schema:
          type: integer
        description: 회사 id
    patch:
      summary: 회사 수정
      description: 들어온 값들을 통해서 회사를 수정한다.
      tags:
        - company
      requestBody:
        description: 고객을 수정하기 위해 필요한 값들
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyName'
                companyCode:
                  $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyCode'
              additionalProperties: false
            example:
              companyName: string
              companyCode: string
      responses:
        '200':
          description: 회사 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/paths/~1companies/post/responses/201/content/application~1json/schema/properties/id'
                  companyName:
                    $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyName'
                  companyCode:
                    $ref: '#/paths/~1companies/post/requestBody/content/application~1json/schema/properties/companyCode'
                  userCount:
                    $ref: '#/paths/~1companies/post/responses/201/content/application~1json/schema/properties/userCount'
                required:
                  - id
                  - companyName
                  - companyCode
                  - userCount
                additionalProperties: false
              example:
                id: 1
                companyName: string
                companyCode: string
                userCount: 3
        '400':
          description: 회사 수정 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 관리자 권한이 필요합니다
        '404':
          description: 회사 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 회사입니다
    delete:
      summary: 특정 회사 삭제
      description: 특정 회사를 삭제한다.
      tags:
        - company
      responses:
        '200':
          description: 회사 정보 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 회사 삭제 성공
              example:
                message: 회사 삭제 성공
        '400':
          description: 회사 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 관리자 권한이 필요합니다
        '404':
          description: 회사 없음
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car~1%7BcarId%7D/get/responses/404/content/application~1json/schema'
              example:
                message: 존재하지 않는 회사입니다
  /companies/users:
    get:
      summary: 회사별 유저 목록 조회
      description: 모든 회사의 유저 목록을 조회합니다.
      tags:
        - company
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 현재 페이지 번호
        - in: query
          name: pageSize
          schema:
            type: integer
          description: 페이지 당 요소의 개수
        - in: query
          name: searchBy
          schema:
            type: string
          description: 검색 기준
        - in: query
          name: keyword
          schema:
            type: string
          description: 검색어(검증은 서버에서 실시)
      responses:
        '200':
          description: 회사 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    description: 현재 페이지 번호
                  totalPages:
                    type: integer
                    description: 전체 페이지 수
                  totalItemCount:
                    type: integer
                    description: 전체 아이템 수
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: 유저 구별용 id
                        name:
                          type: string
                          description: 유저 이름
                        email:
                          type: string
                          format: email
                          description: 유저 이메일
                        employeeNumber:
                          type: string
                          description: 유저 사원번호
                        phoneNumber:
                          type: string
                          description: 유저 전화번호
                        imageUrl:
                          type: string
                          description: 유저 프로필 이미지 url
                        isAdmin:
                          type: boolean
                          description: 유저 어드민 유무
                        company:
                          type: object
                          properties:
                            companyCode:
                              type: string
                              description: 회사 코드
                      required:
                        - id
                        - name
                        - email
                        - employeeNumber
                        - phoneNumber
                        - imageUrl
                        - isAdmin
                        - company
                      additionalProperties: false
                required:
                  - currentPage
                  - totalPages
                  - totalItemCount
                  - data
                additionalProperties: false
              examples:
                sample:
                  summary: 회사 목록 응답 예시
                  value:
                    currentPage: 1
                    totalPages: 2
                    totalItemCount: 6
                    data:
                      - id: 1
                        name: string
                        email: string
                        employeeNumber: string
                        phoneNumber: string
                        company:
                          type: object
                          properties:
                            companyName:
                              type: string
                      - id: 2
                        name: string
                        email: string
                        employeeNumber: string
                        phoneNumber: string
                        company:
                          type: object
                          properties:
                            companyName:
                              type: string
        '400':
          description: 회사 목록 조회 실패
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/400/content/application~1json/schema'
              example:
                message: 잘못된 요청입니다
        '401':
          description: 관리자 권한 필요
          content:
            application/json:
              schema:
                $ref: '#/paths/~1car/get/responses/401/content/application~1json/schema'
              example:
                message: 관리자 권한이 필요합니다
